$destemail = "tso.sspp3@mail.com"
$origemail = "vmwarepowercli@mail.es"
$smtpserver = "localhost"

$error.clear()

Start-Transcript log.txt -append

$vcenters = Get-Content -Path ..\vcenters.txt | ? {$_ -notlike "*voc*" -and $_ -notlike "*icex*"}
$credentials = Get-Content -Path ..\credentials.txt
$user = ($credentials -split ",")[0]
$password = ($credentials -split ",")[1]
Connect-VIServer $vcenters -User $user -Password $password

$texto= @()

$infohosts = Get-View -ViewType "HostSystem" -Property Name,Config.StorageDevice,config.MultipathState.path | sort name
$hostswdeadpaths = $infohosts | ? {$_.config.MultipathState.path.pathstate -eq "dead" -or $_.config.MultipathState.path.pathstate -eq "disabled"}
$hostswhbanotonline = $infohosts | ? {$_.config.StorageDevice.HostBusAdapter.nodeworldwidename -ne $null -and $_.config.StorageDevice.HostBusAdapter.status -ne "online" -and $_.config.StorageDevice.HostBusAdapter.key -like "*FibreChannelHba*" -and $_.config.StorageDevice.HostBusAdapter.model -like "*Fibre Channel*" -and $_.config.StorageDevice.HostBusAdapter.UnderlyingNic -eq $null}
$hostswoddpaths = $infohosts
#filtrorenfe paths impares
$hostswoddpaths = $hostswoddpaths | ? {$_.name -notlike "*renfe*"}

if($hostswhbanotonline.count -gt 0)
{
	foreach ($hostwhbanotonline in $hostswhbanotonline)
	{
		$vcenter = ($hostshbanotonline.client.ServiceUrl -split "/")[2]
		$hbasnotonline = $hostwhbanotonline.config.StorageDevice.HostBusAdapter | ? {$_.nodeworldwidename -ne $null -and $_.status -ne "online" -and $_.key -like "*FibreChannelHba*" -and $_.model -like "*Fibre Channel*" -and $_.UnderlyingNic -eq $null}
		foreach ($hbanotonline in $hbasnotonline)
		{
			write-host "hbanotonline: | "+ $vcenter+" | " + $hostwhbanotonline.Name + " | " + $hbanotonline.device + " | " + $hbanotonline.model + " | " + $hbanotonline.status
			$texto += "hbanotonline: | "+ $vcenter+" | " + $hostwhbanotonline.Name + " | " + $hbanotonline.device + " | " + $hbanotonline.model + " | " + $hbanotonline.status
		}
	}
}

if($hostswoddpaths.count -gt 0)
{
	$scsiluns = Get-ScsiLun -vmhost $hostswoddpaths.name | ? {$_.luntype -eq "disk" -and $_.islocal -ne $true}

	foreach ($hostwoddpaths in $hostswoddpaths)
	{
		$vcenter = ($hostwoddpaths.client.ServiceUrl -split "/")[2]
		foreach($lun in $hostwoddpaths.config.storagedevice.multipathinfo.lun | ? {$_.storagearraytypepolicy.policy -ne "VMW_SATP_LOCAL"})
		{
			$scsilungb = [int]($scsilun.capacitygb)
			$npaths = $lun.path.count
			if($npaths -ne 2 -and $npaths -ne 4 -and $npaths -ne 8 -and $npaths -ne 16)
			{
				$scsilun = $scsiluns | ? {$_.key -eq $lun.lun} | Select-Object -first 1
				$nLUN = (($scsilun.RunTimeName -Split "L")[1] -as [Int])
				$texto += "OddPaths: | "+ $vcenter+" | " + $hostwoddpaths.Name + " | LUN:" + $nLUN + " | " + $scsilungb + "GB | Vendor:" + $scsilun.vendor + " | npaths:" +$npaths
				write-host "OddPaths: | "+ $vcenter+" | " + $hostwoddpaths.Name + " | LUN:" + $nLUN + " | " + $scsilungb + "GB | Vendor:" + $scsilun.vendor + " | npaths:" +$npaths
			}
		}
	}
}

if($hostswdeadpaths.count -gt 0)
{
	$scsiluns = Get-ScsiLun -vmhost $hostswdeadpaths.name | ? {$_.luntype -eq "disk" -and $_.islocal -ne $true}

	foreach ($hostswdeadpath in $hostswdeadpaths)
	{
		$vcenter = ($hostswdeadpath.client.ServiceUrl -split "/")[2]
		$luns = $hostswdeadpath.config.storagedevice.scsilun
		foreach ($lun in $luns)
		{
			$scsilun = $scsiluns | ? {$_.canonicalname -eq $lun.canonicalname} | Select-Object -first 1
			$nLUN = (($scsilun.RunTimeName -Split "L")[1] -as [Int])
			$scsipathlun = $hostswdeadpath.config.storagedevice.MultipathInfo.lun | ? {$_.lun -eq $lun.key}
			$scsipaths = $scsipathlun.path | ? {$_.state -eq "dead" -or $_.state -eq "disabled"}
			foreach ($scsipath in $scsipaths)
			{
				$path_vmhba = ($scsipath.adapter -split "key-vim.host.FibreChannelHba-")[1]
				$scsipathtportwwn = "{0:X}" -f $scsipath.Transport.PortWorldWideName
				$scsipathtnodewwn = "{0:X}" -f $scsipath.Transport.NodeWorldWideName
				$target = $scsipathtnodewwn +" "+$scsipathtportwwn
				$scsilungb = [int]($scsilun.capacitygb)
				$event = "Dead Path: " + $vcenter + " | " + $scsilun.VMHost + " | LUN:" + $nLUN + " | " + $scsilungb +"GB | Vendor:" + $scsilun.Vendor + " | " + $scsipath.state + " | " + $scsilun.MultiPathPolicy + " | " + $path_vmhba + " | Target:" + $target + " | " + $scsilun.canonicalname
				#eventcreate /T warning /L application /ID 302 /SO $vcenter /D $event
				$texto += "DeadPath: | " + $vcenter + " | " + $scsilun.VMHost + " | LUN:" + $nLUN + " | " + $scsilungb +"GB | Vendor:" + $scsilun.Vendor + " | " + $scsipath.state + " | " + $scsilun.MultiPathPolicy + " | " + $path_vmhba + " | Target:" + $target + " | " + $scsilun.canonicalname
				write-host "DeadPath: | " + $vcenter + " | " + $scsilun.VMHost + " | LUN:" + $nLUN + " | " + $scsilungb +"GB | Vendor:" + $scsilun.Vendor + " | " + $scsipath.state + " | " + $scsilun.MultiPathPolicy + " | " + $path_vmhba + " | Target:" + $target + " | " + $scsilun.canonicalname
			}
		}
	}
}

if($texto.count -gt 0)
{
	$texto = Out-String -Inputobject $texto
	send-mailmessage -from $origemail -to $destemail -subject "VMware PowerCLI review paths" -body $texto -smtpServer $smtpserver
	write-host $texto
	write-host "email sent"
}

if($error.count -gt 0)
{
	$errores = Out-String -Inputobject $error
	send-mailmessage -from $origemail -to $destemail -subject "VMware PowerCLI review paths, execution error" -body $errores -smtpServer $smtpserver
}

Stop-Transcript

if( [int]((Get-ChildItem .\log.txt).Length / 1024 / 1024) -gt 200)
{
	if(test-path .\log.txt.old)
	{
		remove-item	.\log.txt.old
	}
	Rename-Item .\log.txt .\log.txt.old
}
